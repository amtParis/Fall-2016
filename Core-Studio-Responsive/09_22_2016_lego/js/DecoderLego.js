// JavaScript Document
var Decoder = function(){
	
}

Decoder.prototype = {
	
	getBinary:function(letter){
		switch(letter){
			
			case "0":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,1,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "1":
				return [[1,1,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[1,1,1,1,1]];
			break;
			case "2":
				return [[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[1,1,1,1,1],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,1,1,1,1]];
			break;
			case "3":
				return [[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[0,0,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "4":
				return [[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[0,0,0,0,1]];
			break;
			case "5":
				return [[1,1,1,1,1],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "6":
				return [[1,1,1,1,1],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "7":
				return [[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[0,0,1,1,1],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0]];
			break;
			case "8":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "9":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1],
						[0,0,0,0,1],
						[0,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case ":":
				return [[0,0,0,0,0],
						[0,0,0,0,0],
						[0,0,1,0,0],
						[0,0,0,0,0],
						[0,0,0,0,0],
						[0,0,1,0,0],
						[0,0,0,0,0]];
			break;

			case "a":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1]];
			break;
			case "a":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1]];
			break;
			case "m":
				return [[1,0,0,0,1],
						[1,1,0,1,1],
						[1,0,1,0,1],
						[1,0,1,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1]];
			break;
			case "t":
				return [[1,1,1,1,1],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0],
						[0,0,1,0,0]];
			break;
			case "c":
				return [[1,1,1,1,1],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,1,1,1,1]];
			break;
			case "l":
				return [[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,0,0,0,0],
						[1,1,1,1,1]];
			break;
			case "o":
				return [[1,1,1,1,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,0,0,0,1],
						[1,1,1,1,1]];
			break;
			case "k":
				return [[1,0,0,0,1],
						[1,0,0,1,0],
						[1,0,1,0,0],
						[1,1,0,0,0],
						[1,0,1,0,0],
						[1,0,0,1,0],
						[1,0,0,0,1]];
			break;
			
			
			}
	}



}